<!DOCTYPE html>
<html lang="en">
  <%- include('./components/head') %>
  <body>
    <div class="container">
      <%- include('./components/toolbar') %>
      <div class="content">
        <div class="editor-container">
          <div id="monaco-editor"></div>
        </div>
        <div class="splitter"></div>
        <%- include('./components/preview') %>
      </div>
    </div>

    <!-- Include scripts in proper order -->
    <script src="<%= scriptUri %>/shared.js"></script>
    <script src="<%= scriptUri %>/editor.js"></script>
    <script src="<%= scriptUri %>/preview.js"></script>
    <script src="<%= scriptUri %>/toolbar.js"></script>

    <!-- Initialize mermaid -->
    <script>
      window.mermaidText = `<%- mermaidText %>`;

      document.addEventListener("DOMContentLoaded", async () => {
        try {
          // Mermaid'i yapılandır
          await mermaid.initialize({
            startOnLoad: false,
            securityLevel: 'loose',
            deterministicIds: true,
            logLevel: 5,
            theme: document.body.classList.contains("vscode-dark")
              ? "dark"
              : "default",
            fontFamily: 'sans-serif',
            flowchart: {
              htmlLabels: true,
              useMaxWidth: false,
              curve: 'basis'
            },
            sequence: {
              useMaxWidth: false,
              diagramMarginY: 10
            },
            gantt: {
              useMaxWidth: false
            }
          });

          // İlk diagram render
          if (window.mermaidText) {
            await updateDiagram(window.mermaidText);
          }

          // Event listener'ları ekle
          window.addEventListener("message", async (event) => {
            const message = event.data;
            try {
              switch (message.command) {
                case "update":
                  if (message.text) {
                    await updateDiagram(message.text);
                  }
                  break;
                case "theme-change":
                  await mermaid.initialize({
                    theme: message.theme === "dark" ? "dark" : "default",
                    securityLevel: 'loose',
                    deterministicIds: true
                  });
                  if (window.mermaidText) {
                    await updateDiagram(window.mermaidText);
                  }
                  break;
              }
            } catch (error) {
              console.error("Message handling error:", error);
              const mermaidDiv = document.querySelector(".mermaid");
              if (mermaidDiv) {
                mermaidDiv.innerHTML = `<div class="error">Error handling message: ${error.message}</div>`;
              }
            }
          });
        } catch (error) {
          console.error("Initialization error:", error);
          document.querySelector(".preview-container").innerHTML = `
            <div class="error" style="padding: 1em; color: var(--vscode-errorForeground);">
              Failed to initialize diagram preview: ${error.message}
            </div>
          `;
        }
      });
    </script>
  </body>
</html>
